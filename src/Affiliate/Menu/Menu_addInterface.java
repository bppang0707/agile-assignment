package Affiliate.Menu;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author wongc
 */
public class Menu_addInterface extends javax.swing.JFrame {

    private String host = "jdbc:derby://localhost:1527/CustomerOrder";
    private String user = "nbuser";
    private String password = "nbuser";
    private String tableName = "CustomerOrder";
    private Connection conn;
    private PreparedStatement stmt;
    /**
     * Creates new form customerOrderInterface
     */
     private int n = 0;
     
     
    public Menu_addInterface() {
        //createConnection();
        initComponents();
        txtPrice.setEditable(true);
        //txtPrice.setText(generateCustomerID());
    }
  public void createConnection()
    {
        try
        {
            conn = DriverManager.getConnection(host, user, password);
            System.out.println("***Vet : Connection established.");
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        lblcusIID = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        lblRestaurant = new javax.swing.JLabel();
        cbCategory = new javax.swing.JComboBox<>();
        lblMenuItem = new javax.swing.JLabel();
        cbPrepareTime = new javax.swing.JComboBox<>();
        lblQuantity = new javax.swing.JLabel();
        jbtnNext = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtName = new javax.swing.JTextField();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblcusIID.setText("Item Name : ");

        lblRestaurant.setText("Category : ");

        cbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category", "Main course", "Appetizer", "Soup", "Salad", "Snack", "Dessert" }));
        cbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCategoryActionPerformed(evt);
            }
        });

        lblMenuItem.setText("Prepare Time :");

        cbPrepareTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select prepare time", "5-10 mins", "10-15 mins", "15-20 mins", "20 mins above", " " }));

        lblQuantity.setText("Price :");

        jbtnNext.setText("Next");
        jbtnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNextActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Category", "Prepare Time", "Price (RM)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMenuItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblRestaurant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblcusIID)
                                    .addComponent(lblQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPrice)
                            .addComponent(cbCategory, 0, 159, Short.MAX_VALUE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbPrepareTime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(116, 116, 116)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 445, Short.MAX_VALUE)
                        .addComponent(jbtnNext)
                        .addGap(290, 290, 290))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblcusIID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRestaurant, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMenuItem)
                            .addComponent(cbPrepareTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(lblQuantity))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd)
                        .addGap(99, 99, 99))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jbtnNext)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNextActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jbtnNextActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String name = "";
        String category = "";
        String prepareTime = "";
        double price = 0;
                
        name = txtName.getText();
        category = cbCategory.getSelectedItem().toString();
        prepareTime = cbPrepareTime.getSelectedItem().toString();
        price = Double.parseDouble(txtPrice.getText());
        
        if(name == ""){
            JOptionPane.showMessageDialog(null,"Please enter a valid input");
        }else{
            JOptionPane.showMessageDialog(null,"Complete");
        
        /*try {
              sQuantity.commitEdit();
            } catch ( java.text.ParseException e ) { 
                JOptionPane.showMessageDialog(null,"invalid","Error",JOptionPane.ERROR_MESSAGE);
            }*/
            //int value = (Integer) sQuantity.getValue();
            //Resize column
            
        

       
        
          jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);   
          jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);  
          jTable1.getColumnModel().getColumn(2).setPreferredWidth(100); 
       
         
        //Move the customer order to jTable
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.addRow(new Object[]{name, category, prepareTime, price});
        
        txtName.setText("");
        txtPrice.setText("");
        cbCategory.setSelectedIndex(0);
        cbPrepareTime.setSelectedIndex(0);
        }
        
        //Database
        /*
        try{// Add Customer order to database
         String sql = "Insert Into CUSTOMERORDER(customerID,Restaurant,menuItem,quantity) values (?,?,?,?)"; 
         stmt = conn.prepareStatement(sql);
         stmt.setString(1, custID);
         stmt.setString(2, restaurant);
         stmt.setString(3, menuItem);
         stmt.setInt(4, value);
         stmt.execute(); 
         
         JOptionPane.showMessageDialog(null, "Success");
         
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "you data is null");
        }
        */
            
    }//GEN-LAST:event_btnAddActionPerformed

    private void cbCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCategoryActionPerformed
        /*
        
        // for customer choose , different restaurant have different menu item
        cbPrepareTime.removeAllItems();
          if(cbCategory.getSelectedIndex() == 0)
        {
            cbPrepareTime.addItem("Select Menu Item");
        }
          if(cbCategory.getSelectedIndex() == 1)
        {
            cbPrepareTime.addItem("BBQ Beef Ribs");
            cbPrepareTime.addItem("Loaded Baked Potatoes");
            cbPrepareTime.addItem("Kookaburra Wings");
            cbPrepareTime.addItem("Outbreak Special");
            cbPrepareTime.addItem("No Rules Pasta");
        }
        if(cbCategory.getSelectedIndex() == 2)
        {
            cbPrepareTime.addItem("Franco French Toast");
            cbPrepareTime.addItem("Carbonara");
            cbPrepareTime.addItem("Nutella Pancake");
            cbPrepareTime.addItem("Chicken Teriyaki Rice");
            cbPrepareTime.addItem("Bolognese");
        }
         if(cbCategory.getSelectedIndex() == 3)
        {
            cbPrepareTime.addItem("Beef Protein");
            cbPrepareTime.addItem("Vegan Veggie Protein");
            cbPrepareTime.addItem("Chicken Protein");
             cbPrepareTime.addItem("Burger Combo");
            cbPrepareTime.addItem("Coke");
        }        
         if(cbCategory.getSelectedIndex() == 4)
        {
            cbPrepareTime.addItem("Orange Power");
            cbPrepareTime.addItem("Cold Pressed Fruit Tea");
            cbPrepareTime.addItem("Tropical Greens");
            cbPrepareTime.addItem("Mint Lemonade");
            cbPrepareTime.addItem("Cilantro Celey Punch");
        }        
         if(cbCategory.getSelectedIndex() == 5)
        {
            cbPrepareTime.addItem("Salmon Bento with Edamame and Coke");
            cbPrepareTime.addItem("Beef Bento with Edamame and Coke");
            cbPrepareTime.addItem("Saba Bento with Edamame and Coke");
            cbPrepareTime.addItem("Spicy Chicken with Edamame and Coke");
            cbPrepareTime.addItem("Bolognese");
        }       
         if(cbCategory.getSelectedIndex() == 6)
        {
            cbPrepareTime.addItem("Hyderabadi Dum Chicken Biryani");
            cbPrepareTime.addItem("Butter Chicken");
            cbPrepareTime.addItem("Palak Paneer");
            cbPrepareTime.addItem("Tadka Dal");
            cbPrepareTime.addItem("Eggplant Masala");
        }
         if(cbCategory.getSelectedIndex() == 7)
        {
            cbPrepareTime.addItem("1/4 Chicken");
            cbPrepareTime.addItem("chicken Butterfly");
            cbPrepareTime.addItem("Chicken Wrap");
            cbPrepareTime.addItem("Whole Chicken");
            cbPrepareTime.addItem("Full Platter");
        }
          if(cbCategory.getSelectedIndex() == 8)
        {
            cbPrepareTime.addItem("Fettuccine Crepe");
            cbPrepareTime.addItem("Dipndip Crepe");
            cbPrepareTime.addItem("Brownies Crepe");
            cbPrepareTime.addItem("Cinnamon Pouch Crepe");
            cbPrepareTime.addItem("Banana Wrap Crepe");
        }
      */
    }//GEN-LAST:event_cbCategoryActionPerformed

    public String generateCustomerID()
    {
        String id = "";
        int subID = 0;
        try{
            
            String query = "SELECT MAX(CustomerID) FROM " + tableName;
            stmt = conn.prepareStatement(query);  

            ResultSet rs =stmt.executeQuery() ;
            while(rs.next())
            {
                id = rs.getString(1);
                subID=Integer.valueOf(id.substring(1,5));
            
            }subID++;
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);
        }
        String finalID = "C" + subID;
        return finalID; 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu_addInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu_addInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu_addInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu_addInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu_addInterface().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JComboBox<String> cbCategory;
    private javax.swing.JComboBox<String> cbPrepareTime;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtnNext;
    private javax.swing.JLabel lblMenuItem;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblRestaurant;
    private javax.swing.JLabel lblcusIID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
