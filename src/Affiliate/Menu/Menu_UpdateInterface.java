/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Affiliate.Menu;

import java.io.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author HP
 */
public class Menu_UpdateInterface extends javax.swing.JFrame {

    public JTable table;
    public Menu menu;
    /**
     * Creates new form Menu_UpdateInterface
     */
    public Menu_UpdateInterface() {
        initComponents();
        addRowToTable();
    }

//    public class Menu {
//
//        public String name = "";
//        public String category = "";
//        public String prepareTime = "";
//        public double price = 0;
//
//        public Menu(String name, String category, String prepareTime, double price) {
//            this.name = name;
//            this.category = category;
//            this.prepareTime = prepareTime;
//            this.price = price;
//        }
//        public void setName(String name) {
//        this.name = name;
//    }
//
//    public void setCategory(String category) {
//        this.category = category;
//    }
//
//    public void setPrepareTime(String prepareTime) {
//        this.prepareTime = prepareTime;
//    }
//
//    public void setPrice(double price) {
//        this.price = price;
//    }
//    }

    public ArrayList ListMenu() {
        ArrayList<Menu> list = new ArrayList<Menu>();
        Menu m1 = new Menu("Fish and chip", "Main course", "30 min", 15.0);
        Menu m2 = new Menu("Coconut shake", "Beverage", "15 min", 8.0);
        list.add(m1);
        list.add(m2);
        return list;
    }

    public void addRowToTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        ArrayList<Menu> list = ListMenu();
        //Object rowData [] = new Object[4];
        for (int i = 0; i < list.size(); i++) {
            /*
            rowData[0] = list.get(i).name;
            rowData[1] = list.get(i).category;
            rowData[3] = list.get(i).prepareTime;
            rowData[4] = list.get(i).price;
            model.addRow(rowData);*/
            model.addRow(new Object[]{list.get(i).name, list.get(i).category, list.get(i).prepareTime, list.get(i).price});
        }
    }

    public void saveFile() {
        File fileName = new File("Menu.txt");
        ArrayList<Menu> list = ListMenu();

        try {
            FileWriter fw = new FileWriter(fileName);
            Writer output = new BufferedWriter(fw);
            int sz = list.size();
            for (int i = 0; i < sz; i++) {
                output.write(list.get(i).name +" "+ list.get(i).category+" " + list.get(i).prepareTime+" " + list.get(i).price + "\n");
            }
            output.close();
            System.out.println("Done");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "I cannot create that file");
        }
    }

    public void getTableData(){
        List<Menu> list = new ArrayList<Menu>();

        for (int row = 0; row < table.getRowCount(); row++) {

            for (int column = 0; column < table.getColumnCount(); column++) {
                switch (column) {
                    case 0:
                        menu.setName(table.getValueAt(row, column).toString());
                        break;
                    case 1:
                        menu.setCategory(table.getValueAt(row, column).toString());
                        break;
                    case 2:
                        menu.setPrepareTime(table.getValueAt(row, column).toString());
                        break;
                    case 3:
                        menu.setPrice(Double.parseDouble(table.getValueAt(row, column).toString()));
                        break;
                }
            }
            // Store each object in the list.
            list.add(menu);
            System.out.println(menu);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Category", "Prepare Time", "Price (RM)"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane2.setViewportView(jTable1);

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jButton1)
                        .addGap(131, 131, 131)
                        .addComponent(jButton2)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        getTableData();
        saveFile();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu_UpdateInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu_UpdateInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu_UpdateInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu_UpdateInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu_UpdateInterface().setVisible(true);
            }
        });
        /*
        String fileName = "Menu.txt";
        String line;
        ArrayList aList = new ArrayList();
        
        try{
            FileReader fr = new FileReader(fileName);
            BufferedReader input = new BufferedReader(fr);
            if (!input.ready()){
                throw new IOException();
            }
            while((line = input.readLine())!= null){
                aList.add(line);
            }
            input.close();
        }catch (IOException e){
            System.out.println(e);
        }
        
        int sz = aList.size();
        for(int i=0; i<sz; i++){
            System.out.println(aList.get(i).toString());
            name = aList.get(i).toString();
            category = aList.get(i+1).toString();
            prepareTime = aList.get(i+2).toString();
            price = Double.parseDouble(aList.get(i+3).toString());
            i+=3;
    }
        System.out.println(category.toString());*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
