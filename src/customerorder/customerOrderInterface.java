package CustomerOrder;

import java.awt.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;
import javax.swing.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author wongc
 */
public class customerOrderInterface extends javax.swing.JFrame {

    private String host = "jdbc:derby://localhost:1527/CustomerOrder";
    private String user = "nbuser";
    private String password = "nbuser";
    private String tableName = "CustomerOrder";
    private Connection conn;
    private PreparedStatement stmt;
      customerorder.afterConfirmInterface next;
      int index =0;

      String custID;      
      
       ArrayList<String> tab;
       ArrayList[] table = new ArrayList[100];
    /**
     * Creates new form customerOrderInterface
     */
     private int n = 0;
     private int grandtotal = 0;
     
    public customerOrderInterface() {
        createConnection();
        initComponents();
        txtCusID.setEditable(false);
        txtCusID.setText(generateCustomerID());
        

    }
  public void createConnection()
    {
        try
        {
            conn = DriverManager.getConnection(host, user, password);
            System.out.println("***Vet : Connection established.");
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        lblcusIID = new javax.swing.JLabel();
        txtCusID = new javax.swing.JTextField();
        lblRestaurant = new javax.swing.JLabel();
        cbRestaurant = new javax.swing.JComboBox<>();
        lblMenuItem = new javax.swing.JLabel();
        cbMenuItem = new javax.swing.JComboBox<>();
        lblQuantity = new javax.swing.JLabel();
        sQuantity = new javax.swing.JSpinner();
        jbtnNext = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblcusIID.setText("Customer ID :");

        txtCusID.setEnabled(false);

        lblRestaurant.setText("Restaurant  :");

        cbRestaurant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Restaurant", "Outback ", "Franco(Nu Sentral)", "Built Custom Burgers", "La Juiceria", "Izumi Japanese ", "Fierce Curry House", "Nando's", "Dipndip", " " }));
        cbRestaurant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRestaurantActionPerformed(evt);
            }
        });

        lblMenuItem.setText("Menu Item :");

        cbMenuItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select menu item", " " }));

        lblQuantity.setText("Quantity :");

        sQuantity.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        jbtnNext.setText("Next");
        jbtnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNextActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "no", "Restaurant", "MenuItem", "Quantity"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblMenuItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblRestaurant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbRestaurant, 0, 159, Short.MAX_VALUE)
                                    .addComponent(cbMenuItem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblcusIID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCusID, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(92, 92, 92)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(188, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnNext)
                        .addGap(290, 290, 290))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblcusIID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCusID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRestaurant, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbRestaurant, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMenuItem)
                            .addComponent(cbMenuItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblQuantity)
                            .addComponent(sQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd)
                        .addGap(99, 99, 99))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jbtnNext)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNextActionPerformed
        // TODO add your handling code here:
          
           
        
        
         next = new customerorder.afterConfirmInterface(table, index);
         next.setTab(table);
         next.setVisible(true);
       System.out.print(getTab());
    }//GEN-LAST:event_jbtnNextActionPerformed

    public ArrayList<String> getTab() {
        return tab;
    }


    public void setTab(ArrayList<String> tab) {
        this.tab = tab;
    }

    
    
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
    

       
        custID = txtCusID.getText();
        String restaurant = cbRestaurant.getSelectedItem().toString();
        String menuItem = cbMenuItem.getSelectedItem().toString();
        try {
              sQuantity.commitEdit();
            } catch ( java.text.ParseException e ) { 
                JOptionPane.showMessageDialog(null,"invalid","Error",JOptionPane.ERROR_MESSAGE);
            }
            int value = (Integer) sQuantity.getValue();
            //Resize column
          jTable1.getColumnModel().getColumn(0).setPreferredWidth(40);   
          jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);  
          jTable1.getColumnModel().getColumn(2).setPreferredWidth(250); 
       
         
        //Move the customer order to jTable
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.addRow(new Object[]{++n,restaurant,menuItem,value});
        
        
        
        try{// Add Customer order to database
         String sql = "Insert Into CUSTOMERORDER(customerID,Restaurant,menuItem,quantity) values (?,?,?,?)"; 
         stmt = conn.prepareStatement(sql);
         stmt.setString(1, custID);
         stmt.setString(2, restaurant);
         stmt.setString(3, menuItem);
         stmt.setInt(4, value);
         stmt.execute(); 
         
         JOptionPane.showMessageDialog(null, "Success");
         Random random = new Random();
        int max = 15;
        int min = 5;
        int randomNumber = 0;
        for(int counter=1; counter<=1;counter++){
        randomNumber = random.nextInt(max + 1 - min) + min ;
        System.out.println(randomNumber);
        }
          
        String no = Integer.toString(n);
        
          int sub = randomNumber * value ;   
          String subTotal = Integer.toString(sub);
            
            
          tab = new ArrayList<String>();
          tab.add(no);
          tab.add(restaurant);
          tab.add(menuItem);
          tab.add(value+"");
          tab.add(subTotal);
          table[index++]= tab;
       
          
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "you data is null");
        }
        
      
    }//GEN-LAST:event_btnAddActionPerformed

    private void cbRestaurantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRestaurantActionPerformed
        // TODO add your handling code here:
        
        // for customer choose , different restaurant have different menu item
        cbMenuItem.removeAllItems();
          if(cbRestaurant.getSelectedIndex() == 0)
        {
            cbMenuItem.addItem("Select Menu Item");
        }
          if(cbRestaurant.getSelectedIndex() == 1)
        {
            cbMenuItem.addItem("BBQ Beef Ribs");
            cbMenuItem.addItem("Loaded Baked Potatoes");
            cbMenuItem.addItem("Kookaburra Wings");
            cbMenuItem.addItem("Outbreak Special");
            cbMenuItem.addItem("No Rules Pasta");
        }
        if(cbRestaurant.getSelectedIndex() == 2)
        {
            cbMenuItem.addItem("Franco French Toast");
            cbMenuItem.addItem("Carbonara");
            cbMenuItem.addItem("Nutella Pancake");
            cbMenuItem.addItem("Chicken Teriyaki Rice");
            cbMenuItem.addItem("Bolognese");
        }
         if(cbRestaurant.getSelectedIndex() == 3)
        {
            cbMenuItem.addItem("Beef Protein");
            cbMenuItem.addItem("Vegan Veggie Protein");
            cbMenuItem.addItem("Chicken Protein");
             cbMenuItem.addItem("Burger Combo");
            cbMenuItem.addItem("Coke");
        }        
         if(cbRestaurant.getSelectedIndex() == 4)
        {
            cbMenuItem.addItem("Orange Power");
            cbMenuItem.addItem("Cold Pressed Fruit Tea");
            cbMenuItem.addItem("Tropical Greens");
            cbMenuItem.addItem("Mint Lemonade");
            cbMenuItem.addItem("Cilantro Celey Punch");
        }        
         if(cbRestaurant.getSelectedIndex() == 5)
        {
            cbMenuItem.addItem("Salmon Bento with Edamame and Coke");
            cbMenuItem.addItem("Beef Bento with Edamame and Coke");
            cbMenuItem.addItem("Saba Bento with Edamame and Coke");
            cbMenuItem.addItem("Spicy Chicken with Edamame and Coke");
            cbMenuItem.addItem("Bolognese");
        }       
      
    }//GEN-LAST:event_cbRestaurantActionPerformed

    public String generateCustomerID()
    {
        String id = "";
        int subID = 0;
        try{
            
            String query = "SELECT MAX(CustomerID) FROM " + tableName;
            stmt = conn.prepareStatement(query);  

            ResultSet rs =stmt.executeQuery() ;
            while(rs.next())
            {
                id = rs.getString(1);
                subID=Integer.valueOf(id.substring(1,5));
            
            }subID++;
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);
        }
        String finalID = "C" + subID;
        return finalID; 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(customerOrderInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(customerOrderInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(customerOrderInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(customerOrderInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                customerOrderInterface h = new customerOrderInterface();
                h.setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JComboBox<String> cbMenuItem;
    private javax.swing.JComboBox<String> cbRestaurant;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtnNext;
    private javax.swing.JLabel lblMenuItem;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblRestaurant;
    private javax.swing.JLabel lblcusIID;
    private javax.swing.JSpinner sQuantity;
    private javax.swing.JTextField txtCusID;
    // End of variables declaration//GEN-END:variables
}
